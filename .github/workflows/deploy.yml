
name: Deploy Portfolio

on: 
  push:
    branches: ["main"]

env: 
  STRAVA_BEARER_TOKEN: ${{ secrets.STRAVA_BEARER_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps: 

      - name: clone the repository
        uses: actions/checkout@v3
      
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - run: npm install

      - name: Restore Cache 
        uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/client/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build Client
        working-directory: "${{ github.workspace }}/client"
        run: |
          npm ci
          npm run build
        
      - name: Synth stack
        run: yarn --cwd packages/bootstrap cdk synth

      - name: Deploy stack
        run: yarn --cwd packages/bootstrap cdk deploy --require-approval never


